name: build-push-release

on:
  push:
    # tags:
    #   - "*"

  workflow_dispatch:

env:
  VERSION: "${{ github.ref_name }}"

jobs:
  build-push:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     architecture: ["arm64", "amd64"]
    steps:
      - uses: actions/checkout@v4

      - name: Hadolint Dockerfile
        continue-on-error: true
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: extras/debian.Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/arm64, linux/amd64
          push: false
          file: extras/debian.Dockerfile
          outputs: out
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ env.VERSION }},
                ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false

      # - name: run
      #   run: ls -la out && tree out
  upload-binaries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: ["arm64", "amd64"]
    steps:
        - name: Upload ${{ matrix.architecture }} artifact
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./out/linux_${{ matrix.architecture }}/app/sbin/gluster-exporter
            asset_name: gluster-exporter-${{ matrix.architecture }}
            asset_content_type: application


      #     - name: Upload ${{ matrix.architecture }} artifact
      #     uses: actions/upload-release-asset@v1
      #     env:
      #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     with:
      #       upload_url: ${{ steps.create_release.outputs.upload_url }}
      #       asset_path: ./out/app/sbin/gluster-exporter
      #       asset_name: gluster-exporter-${{ matrix.architecture }}
      #       asset_content_type: application
